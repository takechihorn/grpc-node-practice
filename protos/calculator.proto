syntax = "proto3";

package calculator;

service CalculatorService{
  //Unary API
  rpc Sum (SumRequest) returns (SumResponse) {}
  // Streaming API
  rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){}
  // Streaming api
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){}
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){}

  // error handling
  // this RPC will throw an exeception if the sent number is negative: -1
  // write more about this.....
  rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse){}
}

message SquareRootRequest{
  int32 number = 1;
}

message SquareRootResponse{
  double number_root = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse{
  int32 maximum = 1;
}

message ComputeAverageResponse {
  double average = 1;
}
message ComputeAverageRequest{
  int32 number = 1;
}

message PrimeNumberDecompositionRequest{
  int32 number = 1;
}

message PrimeNumberDecompositionResponse{
  int32 prime_factor = 1;
}

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 sum_result = 1;
}
